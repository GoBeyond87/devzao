@model WebApp.Controllers.CriarProdutoDto

@{
    ViewData["Title"] = "Novo Produto";
}

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-action="Index">Produtos</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Novo Produto</li>
                </ol>
            </nav>
        </div>
    </div>


    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-plus-circle me-2"></i>Adicionar Novo Produto
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" id="produtoForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        
                        <div class="mb-3">
                            <label asp-for="Nome" class="form-label fw-bold"></label>
                            <input asp-for="Nome" class="form-control" />
                            <span asp-validation-for="Nome" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Descricao" class="form-label fw-bold"></label>
                            <textarea asp-for="Descricao" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Descricao" class="text-danger"></span>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="Preco" class="form-label fw-bold"></label>
                                <div class="input-group">
                                    <span class="input-group-text">R$</span>
                                    <input asp-for="Preco" class="form-control" type="number" step="0.01" min="0.01" />
                                </div>
                                <span asp-validation-for="Preco" class="text-danger"></span>
                            </div>
                            
                            <div class="col-md-6 mb-3">
                                <label asp-for="Estoque" class="form-label fw-bold"></label>
                                <input asp-for="Estoque" class="form-control" type="number" min="0" />
                                <span asp-validation-for="Estoque" class="text-danger"></span>
                            </div>
                        </div>
                        
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                            <a asp-action="Index" class="btn btn-outline-secondary me-md-2">
                                <i class="fas fa-arrow-left me-1"></i> Voltar para a lista
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-1"></i> Salvar Produto
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Formata o valor do pre√ßo ao sair do campo
        document.addEventListener('DOMContentLoaded', function() {
            const precoInput = document.getElementById('Preco');
            
            if (precoInput) {
                precoInput.addEventListener('blur', function() {
                    let value = parseFloat(this.value);
                    if (!isNaN(value)) {
                        this.value = value.toFixed(2);
                    }
                });
                
                // Garante que o valor seja positivo
                precoInput.addEventListener('input', function() {
                    if (parseFloat(this.value) < 0) {
                        this.value = '0.01';
                    }
                });
            }
            
            // Impede valores negativos no estoque
            const estoqueInput = document.getElementById('Estoque');
            if (estoqueInput) {
                estoqueInput.addEventListener('input', function() {
                    if (parseInt(this.value) < 0) {
                        this.value = '0';
                    }
                });
            }
        });
    </script>
}
